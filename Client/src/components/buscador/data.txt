export function BuscadorAlimentos() {
    const [nutrition, setNutrition] = useState<any>(null);
    const [food, setFood] = useState("");
    const [loading, setLoading] = useState(false); // Estado para el loader

    const fetchAlimentos = async () => {
        if (!food.trim()) return;
        setLoading(true);
        setNutrition(null); // Limpia los resultados anteriores

        try {
            const data = await foodNutrition(food);
            if (data.foods && data.foods.length > 0) {
                setNutrition(data);
            } else {
                setNutrition(null); // Oculta el contenedor si no hay resultados
            }
        } catch (error) {
            console.error("Error al obtener informaci√≥n nutricional:", error);
            setNutrition(null); // Asegura que el contenedor no se muestre en caso de error
        } finally {
            setLoading(false);
        }
    };

    return (
        <div className="buscador-container">
            <div className="buscador-input-container">
                <input
                    type="text"
                    placeholder="¬øQu√© alimento buscas?"
                    className="buscador-input"
                    value={food}
                    onChange={(e) => setFood(e.target.value)}
                />
                <button className="buscador-button" onClick={fetchAlimentos}>
                    üîç
                </button>
            </div>

            {/* Loader mientras se carga */}
            {loading && <ClipLoader size={35} color="#ffcc00" className="loader" />}

            {/* Muestra el contenedor solo si hay resultados */}
            {nutrition && nutrition.foods.length > 0 && (
                <div className="alimentos-container">
                    <h3>Resultados para: {food}</h3>
                    {nutrition.foods.map((item: any, index: number) => (
                        <div key={index} className="alimento-item">
                            <p><strong>Nombre:</strong> {item.food_name}</p>
                            <p><strong>Calor√≠as:</strong> {item.nf_calories} kcal</p>
                            <p><strong>Prote√≠nas:</strong> {item.nf_protein} g</p>
                            <p><strong>Carbohidratos:</strong> {item.nf_total_carbohydrate} g</p>
                            <p><strong>Grasas:</strong> {item.nf_total_fat} g</p>
                        </div>
                    ))}
                </div>
            )}
        </div>
    );
}

